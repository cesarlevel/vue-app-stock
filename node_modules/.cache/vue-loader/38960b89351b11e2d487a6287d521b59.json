{"remainingRequest":"/Users/c_level/GitHub/vue-app-stock/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/c_level/GitHub/vue-app-stock/src/components/AppHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/c_level/GitHub/vue-app-stock/src/components/AppHeader.vue","mtime":1541185829000},{"path":"/Users/c_level/GitHub/vue-app-stock/node_modules/cache-loader/dist/cjs.js","mtime":1541077964000},{"path":"/Users/c_level/GitHub/vue-app-stock/node_modules/babel-loader/lib/index.js","mtime":1541077964000},{"path":"/Users/c_level/GitHub/vue-app-stock/node_modules/cache-loader/dist/cjs.js","mtime":1541077964000},{"path":"/Users/c_level/GitHub/vue-app-stock/node_modules/vue-loader/lib/index.js","mtime":1541077967000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapActions} from 'vuex';\n\nexport default {\n    name: 'app-header',\n    data() {\n        return {\n            isOpen: false,\n        };\n    },\n    computed: {\n        funds() {\n            return this.$store.getters.funds;\n        },\n        availableStocks() {\n            return this.$store.getters.stockPortfolio.length;\n        },\n    },\n    methods: {\n        ...mapActions({\n            randomizeStocks: 'randomizeStocks',\n            fetchData: 'loadData',\n        }),\n        endDay() {\n            this.randomizeStocks();\n        },\n        async saveData() {\n            const data = {\n                funds: this.$store.getters.funds,\n                stockPortfolio: this.$store.getters.stockPortfolio,\n                stocks: this.$store.getters.stocks,\n            };\n            try {\n                await this.$http.put('data.json', data);\n            } catch (error) {\n                throw error;\n            } finally {\n                this.isOpen = false;\n            }\n        },\n        async loadData() {\n            this.fetchData();\n            this.isOpen = false;\n        },\n    },\n};\n",{"version":3,"sources":["AppHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AppHeader.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary mb-5\">\n        <div class=\"container\">\n            <router-link class=\"navbar-brand\" exact to=\"/\">StockTrader</router-link>\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n                    aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\">\n                <ul class=\"navbar-nav\">\n                    <router-link tag=\"li\" class=\"nav-item\" active-class=\"active\" to=\"/portfolio\"><a class=\"nav-link\">Portafolio\n                        <span class=\"badge badge-pill badge-light\">{{ availableStocks }}</span></a>\n                    </router-link>\n                    <router-link tag=\"li\" class=\"nav-item\" active-class=\"active\" to=\"/stocks\"><a\n                            class=\"nav-link\">Stocks</a></router-link>\n                </ul>\n            </div>\n            <div class=\"collapse navbar-collapse\" style=\"flex: none;\">\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"#\" @click=\"endDay\">End Day</a>\n                    </li>\n                    <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" @click=\"isOpen = !isOpen\" href=\"#\"\n                           id=\"navbarDropdownMenuLink\" role=\"button\"\n                           data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            Save & Load\n                        </a>\n                        <div class=\"dropdown-menu\" :class=\"{'show': isOpen}\" aria-labelledby=\"navbarDropdownMenuLink\">\n                            <a class=\"dropdown-item\" href=\"#\" @click=\"saveData\">Save Data</a>\n                            <a class=\"dropdown-item\" href=\"#\" @click=\"loadData\">Load Data</a>\n                        </div>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link active\">Funds: ${{ funds | currency }}</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n</template>\n\n<script>\n    import {mapActions} from 'vuex';\n\n    export default {\n        name: 'app-header',\n        data() {\n            return {\n                isOpen: false,\n            };\n        },\n        computed: {\n            funds() {\n                return this.$store.getters.funds;\n            },\n            availableStocks() {\n                return this.$store.getters.stockPortfolio.length;\n            },\n        },\n        methods: {\n            ...mapActions({\n                randomizeStocks: 'randomizeStocks',\n                fetchData: 'loadData',\n            }),\n            endDay() {\n                this.randomizeStocks();\n            },\n            async saveData() {\n                const data = {\n                    funds: this.$store.getters.funds,\n                    stockPortfolio: this.$store.getters.stockPortfolio,\n                    stocks: this.$store.getters.stocks,\n                };\n                try {\n                    await this.$http.put('data.json', data);\n                } catch (error) {\n                    throw error;\n                } finally {\n                    this.isOpen = false;\n                }\n            },\n            async loadData() {\n                this.fetchData();\n                this.isOpen = false;\n            },\n        },\n    };\n</script>\n"]}]}